1.BIO
    定义: 为每一个连接创建一个线程
    优劣: a.  产生大量线程, 极大消耗内存资源, 若使用线程池, 仅能解决大量占用内存的问题, 无法解决因线程不足, 导致大量线程等待的问题
          b.  只有当服务器返回时, 用户线程才结束
          c.  连接空闲, 也需保持
    场景: 连接数量较少的场景

2.NIO
    定义: 为每一个请求创建一个线程, 将Channel注册到selector上, 轮询Selector, 当有请求在某个Channel时, 创建线程处理这个请求
    优劣: a.  不会产生太多线程, 节省资源
          b.  不一直等待服务器返回, 但需要轮询Chanel中是否有数据, 消耗资源
          c.  连接空闲, 线程将于其它连接使用
    场景: 连接数目多, 连接比较短, 可以尽快返回的操作

3.AIO
    定义: 为每一个请求创建一个线程
    优劣: a.  当PC内核完成请求后, 主动通知进行处理
    场景: 连接数目多, 且比较长