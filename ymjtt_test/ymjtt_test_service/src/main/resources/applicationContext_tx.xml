<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"  >
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- for test -->
            <!-- read-only -->
            <tx:method name="onlyRead01" propagation="REQUIRED" read-only="true" />
            <!-- timeout -->
            <tx:method name="timeOut01" propagation="REQUIRED" timeout="1"  />        <!-- timeout单位： 秒 -->
            <!-- isolation-->
                <!--读未提交  对事务 update 的行加“共享锁”，事务结束释放锁，其它事务不可修改此行 -->
            <tx:method name="gengXinDate02" propagation="REQUIRED" isolation="READ_UNCOMMITTED"/>
            <tx:method name="gengXinDate0201" propagation="REQUIRED" isolation="READ_UNCOMMITTED"/>
            <tx:method name="chaXunDate02" propagation="REQUIRED" isolation="READ_UNCOMMITTED"/>
                <!--串行化    对事务 read, update 的表加锁，其它事务不可读写任何数据 -->
            <tx:method name="gengXinDate05" propagation="REQUIRED" isolation="SERIALIZABLE"/>
            <tx:method name="gengXinDate0501" propagation="REQUIRED" isolation="SERIALIZABLE"/>
            <tx:method name="chaXunDate05" propagation="REQUIRED" isolation="SERIALIZABLE"/>
            <!-- 传播行为 -->
            <tx:method name="method01" propagation="REQUIRES_NEW" isolation="READ_COMMITTED"/>
            <tx:method name="method02" propagation="REQUIRES_NEW" isolation="READ_COMMITTED"/>
            <!-- 回滚问题 -->
            <tx:method name="method03" propagation="REQUIRED" isolation="READ_COMMITTED" />
            <tx:method name="method04" propagation="REQUIRED" isolation="READ_COMMITTED"  />
            <tx:method name="method05" propagation="REQUIRED" isolation="READ_COMMITTED" no-rollback-for="java.lang.RuntimeException" />
            <tx:method name="method06" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="java.lang.Exception"  />


            <!-- 传播行为 -->
            <tx:method name="quer*" propagation="REQUIRED" read-only="true" />
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 切面 -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.ywx.ymjtt.service.impl.test.*.*(..))"/>
    </aop:config>

</beans>